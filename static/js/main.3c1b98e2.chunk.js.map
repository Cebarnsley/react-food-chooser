{"version":3,"sources":["components/Header/header.js","Images/foodChooserLogo.png","components/Logo/logo.js","components/ToggleContent/toggleContent.js","components/Modal/modal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Logo","alt","src","foodChooserLogo","ToggleContent","toggle","content","React","useState","isShown","setIsShown","Fragment","Modal","children","ReactDOM","createPortal","document","getElementById","App","id","name","items","setItems","inputValue","setInputValue","Math","floor","random","length","randomItem","setRandomItem","result","setResult","handleRemoveItem","e","target","getAttribute","filter","item","show","onClick","hide","map","value","onChange","event","type","placeholder","newItem","newItems","console","log","handleAddButtonClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.3c1b98e2.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nconst Header = () => {\n\n \treturn(\n\t\t<div >\n\t\t\t<p className=\"headerText\">What Should I Eat?</p>\n\t\t</div>\n\t\t);\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/foodChooserLogo.7f6b602e.png\";","import React from 'react';\nimport  './logo.css';\nimport foodChooserLogo from  '../../Images/foodChooserLogo.png';\n\nconst Logo = () => {\n\n \treturn(\n\t\t<div className=\"logoContainer\" >\n\t\t\t<img className=\"mainLogo\" alt='food-chooser-logo' src={foodChooserLogo} />\n\t\t</div>\n\t\t);\n}\n\nexport default Logo;","import React from 'react';\n\n\nconst ToggleContent = ({ toggle, content }) => {\n    const [isShown, setIsShown] = React.useState(false);\n    const hide = () => setIsShown(false);\n    const show = () => setIsShown(true);\n  \n    return (\n      <React.Fragment>\n        {toggle(show)}\n        {isShown && content(hide)}\n      </React.Fragment>\n    );\n  }\n\n  export default ToggleContent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './modal.css';\n\n\nconst Modal = ({ children }) => (\n    ReactDOM.createPortal(\n      <div className=\"modal\">\n        {children}\n      </div>,\n      document.getElementById('modal-root')\n    )\n  );\n\nexport default Modal;","import React, {  useState } from \"react\";\nimport Header from './components/Header/header';\nimport Logo from './components/Logo/logo';\nimport ToggleContent from './components/ToggleContent/toggleContent';\nimport Modal from './components/Modal/modal';\nimport './App.css';\n\nfunction App() {\n\n  const initialList = [\n\t\t{ id: 1, name: \"Chinese\"},\n\t\t{ id: 2, name: \"Indian\"},\n\t\t{ id: 3, name: \"Pizza\"},\n\t\t{ id: 4, name: \"Burgers\"},\n\t\t{ id: 5, name: \"Nando's\"},\n\t\t{ id: 6, name: \"Italian\"}\n\t];\n\n  const [items, setItems] = useState(initialList);\n  const [inputValue, setInputValue] = useState('');\n  const [randomItem, setRandomItem] = useState(function generateRandomInteger(){\n    return Math.floor(Math.random() * items.length);\n })\n  const [result, setResult] = useState('You should eat...');\n\n  \n\n  const handleAddButtonClick = () => {\n\t\tconst newItem = {\n      id: items.length +1,\n      name: inputValue\n\t\t};\n\t\n\t\tconst newItems = [...items, newItem];\n\t\n\t\tsetItems(newItems);\n    setInputValue('');\n    console.log(items);\n\t};\n\n\n\t\n\t\n\tconst handleRemoveItem = e => {\n\t\tconst name = e.target.getAttribute(\"name\")\n    \tsetItems(items.filter(item => item.name !== name));\n\t};\n\n\n  function generateRandomNumber () {\n   \n      if (items.length >= 1) {\n\n      const random = Math.floor(Math.random() * items.length);\n    \n        \n      setRandomItem(random);\n      setResult(items[randomItem].name);\n      \n\n    } else {\n        return null;\n    }\n            \n  };\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header />\n        <Logo />\n        <p className=\"resultsText\">{result}</p>\n\n          <div className=\"editGoButtons\"> \n            \n            <ToggleContent\n            toggle={show => <button className=\"editButton\" onClick={show}>Edit</button>}\n            content={hide => (\n\n\n              <Modal>\n                <div className=\"listModal\">\n                  <button className=\"closeWindowButton\" onClick={hide}>&times;</button>\n                \n                  \n                  <div className=\"list\">\n                      {items.map((item, id) => {\n\n                        return (\n                        \n                          <div className='itemName' key={id}>\n                            <p>{item.name}</p>\n                            <button className=\"deleteButton\" name={item.name} onClick={handleRemoveItem}>&times;</button>\n                          </div>\n                          \n                        )\n                      }\n                  )}\n                      \n                     \n\n                    </div>\n                    <div className=\"inputArea\">\n                      <input value={inputValue} onChange={(event) => setInputValue(event.target.value)}   type=\"text\" placeholder=\"Add more food...\" className=\"inputTextArea\" />\n                      <button type=\"submit\" className=\"submitButton\"  onClick={() => handleAddButtonClick()}>Add</button>\n                    </div>\n                </div>\n              </Modal>\n\n              \n            )}\n          />\n         \n            \n            <button className=\"goButton\" onClick={generateRandomNumber}>Go!</button>\n            \n\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}