{"version":3,"sources":["components/Header/header.js","Images/foodChooserLogo.png","components/Logo/logo.js","components/Modal/modal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Logo","alt","src","foodChooserLogo","Modal","children","ReactDOM","createPortal","document","getElementById","App","useState","id","name","items","setItems","inputValue","setInputValue","Math","floor","random","length","randomItem","setRandomItem","result","setResult","showModal","setShowModal","node","useRef","toggleModal","current","console","log","useEffect","addEventListener","handleClickOutside","removeEventListener","e","contains","target","handleAddButtonClick","newItem","newItems","handleRemoveItem","getAttribute","filter","item","onClick","ref","map","value","onKeyPress","key","onChange","event","type","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.08960958.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nconst Header = () => {\n\n \treturn(\n\t\t<div >\n\t\t\t<p className=\"headerText\">What Should I Eat?</p>\n\t\t</div>\n\t\t);\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/foodChooserLogo.7f6b602e.png\";","import React from 'react';\nimport  './logo.css';\nimport foodChooserLogo from  '../../Images/foodChooserLogo.png';\n\nconst Logo = () => {\n\n \treturn(\n\t\t<div className=\"logoContainer\" >\n\t\t\t<img className=\"mainLogo\" alt='food-chooser-logo' src={foodChooserLogo} />\n\t\t</div>\n\t\t);\n}\n\nexport default Logo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './modal.css';\n\n\nconst Modal = ({ children} ) => (\n    ReactDOM.createPortal(\n      <div className=\"modal\">\n        {children}\n      </div>,\n      document.getElementById('modal-root')\n    )\n  );\n\nexport default Modal;","import React, { useRef, useEffect, useState } from \"react\";\nimport Header from './components/Header/header';\nimport Logo from './components/Logo/logo';\nimport Modal from './components/Modal/modal';\nimport './App.css';\n\nfunction App() {\n\n  const initialList = [\n\t\t{ id: 1, name: \"Chinese\"},\n\t\t{ id: 2, name: \"Indian\"},\n\t\t{ id: 3, name: \"Pizza\"},\n\t\t{ id: 4, name: \"Burgers\"},\n\t\t{ id: 5, name: \"Nando's\"},\n\t\t{ id: 6, name: \"Italian\"}\n\t];\n\n  const [items, setItems] = useState(initialList);\n  const [inputValue, setInputValue] = useState('');\n  const [randomItem, setRandomItem] = useState(function generateRandomInteger(){ return Math.floor(Math.random() * items.length);})\n  const [result, setResult] = useState('You should eat...');\n  const [showModal, setShowModal] = useState(false);\n  const node = useRef();\n\n\n  // toggle show/hide list array modal\n  \n  const toggleModal = () => {\n    setShowModal(current => !current)\n    console.log(showModal) \n  }\n\n  // handle click outside modal to close it\n\n  useEffect(() => {\n    if (showModal) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showModal]);\n\n  const handleClickOutside = (e) => {\n    if (node.current && node.current.contains(e.target)) {\n      \n      return;\n    }\n    setShowModal(false);\n  };\n\n\n  // button to submit new items to list array\n\n  const handleAddButtonClick = () => {\n    \n    if ( inputValue.length >0) {\n      const newItem = {\n        id: items.length,\n        name: inputValue\n      };\n    \n      const newItems = [...items, newItem];\n    \n      setItems(newItems);\n      setInputValue('');\n    }\n   \n  };\n  \n  \n  // uses Enter button keypress to run function to add new item to list array\n\n const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleAddButtonClick();\n    }\n  }\n\n  // delete button to remove item from list array\n\t\n\tconst handleRemoveItem = e => {\n\t\tconst name = e.target.getAttribute(\"name\")\n    \tsetItems(items.filter(item => item.name !== name));\n\t};\n\n\n  // generates random food item from list array\n\n  function generateRandomNumber () {\n   \n      if (items.length >= 1) {\n\n      const random = Math.floor(Math.random() * items.length);\n    \n        \n      setRandomItem(random);\n      setResult(items[randomItem].name);\n      \n\n    } else {\n        return null;\n    }\n            \n  };\n\n\n\n  return (\n    <div className=\"App\" >\n      <div className=\"container\" >\n        <Header />\n        <Logo />\n        <p className=\"resultsText\">{result}</p>\n\n          <div className=\"editGoButtons\"> \n          <button className=\"editButton\" onClick={toggleModal}>Edit</button>\n          \n          {showModal === true ? (\n              <Modal >\n                <div className=\"listModal\" ref={node}>\n                  <button className=\"closeWindowButton\" onClick={toggleModal}>&times;</button>\n                \n                  \n                  <div className=\"list\">\n                      {items.map((item, id) => {\n\n                        return (\n                        \n                          <div className='itemName' key={id}>\n                            <p>{item.name}</p>\n                            <button className=\"deleteButton\" name={item.name} onClick={handleRemoveItem}>&times;</button>\n                          </div>\n                          \n                        )\n                      }\n                  )}\n                      \n                     \n\n                    </div>\n                    <div className=\"inputArea\" >\n                      <input value={inputValue} onKeyPress={handleKeyPress} onChange={(event) => setInputValue(event.target.value)}  type=\"text\" placeholder=\"Add more options...\" className=\"inputTextArea\" />\n                      <button type=\"submit\" className=\"submitButton\"  onClick={() => handleAddButtonClick()}>Add</button>\n                    </div>\n                </div>\n              </Modal>\n\n          ) : (\n            null\n            )}\n            \n            <button className=\"goButton\" onClick={generateRandomNumber}>Go!</button>\n            \n\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}