{"version":3,"sources":["components/Header/header.js","components/Logo/logo.js","components/ToggleContent/toggleContent.js","components/Modal/modal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Logo","alt","src","window","location","origin","ToggleContent","toggle","content","React","useState","isShown","setIsShown","Fragment","Modal","children","ReactDOM","createPortal","document","getElementById","App","name","items","setItems","inputValue","setInputValue","randomNumber","setRandomNumber","result","setResult","handleRemoveItem","e","target","getAttribute","filter","item","show","onClick","hide","map","value","onChange","event","type","placeholder","newItem","newItems","handleAddButtonClick","length","random","Math","floor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.30af1746.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nconst Header = () => {\n\n \treturn(\n\t\t<div >\n\t\t\t<p className=\"headerText\">What Should I Eat?</p>\n\t\t</div>\n\t\t);\n}\n\nexport default Header;","import React from 'react';\nimport './logo.css';\n\nconst Logo = () => {\n\n \treturn(\n\t\t<div className=\"logoContainer\" >\n\t\t\t<img className=\"mainLogo\" alt='food-chooser-logo' src={window.location.origin + '/images/foodChooserLogo.png'} />\n\t\t</div>\n\t\t);\n}\n\nexport default Logo;","import React from 'react';\n\n\nconst ToggleContent = ({ toggle, content }) => {\n    const [isShown, setIsShown] = React.useState(false);\n    const hide = () => setIsShown(false);\n    const show = () => setIsShown(true);\n  \n    return (\n      <React.Fragment>\n        {toggle(show)}\n        {isShown && content(hide)}\n      </React.Fragment>\n    );\n  }\n\n  export default ToggleContent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './modal.css';\n\n// const modalRoot = document.getElementById('modal-root');\n\nconst Modal = ({ children }) => (\n    ReactDOM.createPortal(\n      <div className=\"modal\">\n        {children}\n      </div>,\n      document.getElementById('modal-root')\n    )\n  );\n\nexport default Modal;","import React, {   useState } from \"react\";\nimport Header from './components/Header/header';\nimport Logo from './components/Logo/logo';\nimport ToggleContent from './components/ToggleContent/toggleContent';\nimport Modal from './components/Modal/modal';\nimport './App.css';\n\nfunction App() {\n\n  const initialList = [\n\t\t{ name: \"Chinese\"},\n\t\t{ name: \"Indian\"},\n\t\t{ name: \"Pizza\"},\n\t\t{ name: \"Burgers\"},\n\t\t{ name: \"Nando's\"},\n\t\t{ name: \"Italian\"}\n\t];\n\n  const [items, setItems] = useState(initialList);\n  const [inputValue, setInputValue] = useState('');\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [result, setResult] = useState('You should eat...');\n\n  const handleAddButtonClick = () => {\n\t\tconst newItem = {\n\t\t\tname: inputValue,\n\t\t};\n\t\n\t\tconst newItems = [...items, newItem];\n\t\n\t\tsetItems(newItems);\n\t\tsetInputValue('');\n\t};\n\n\t\n\t\n\tconst handleRemoveItem = e => {\n\t\tconst name = e.target.getAttribute(\"name\")\n    \tsetItems(items.filter(item => item.name !== name));\n\t};\n\n\n  function GenerateRandomNumber () {\n    \n   if (items.length >= 1) {\n      const random = Math.floor(Math.random() * items.length);\n          \n          \n      setRandomNumber(random);\n      setResult(items[randomNumber].name);\n\n    } else {\n        return null;\n    }\n            \n  };\n\n  \n  \n\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header />\n        <Logo />\n        <p className=\"resultsText\">{result}</p>\n\n          <div className=\"editGoButtons\"> \n            \n            <ToggleContent\n            toggle={show => <button className=\"editButton\" onClick={show}>Edit</button>}\n            content={hide => (\n\n\n              <Modal>\n                <div className=\"listModal\">\n                  <button className=\"closeWindowButton\" onClick={hide}>&times;</button>\n                \n                  \n                  <div className=\"list\" >\n                      {items.map((item) => {\n\n                        return (\n                        \n                          <div className='itemName'>\n                            <p>{item.name}</p>\n                            <button className=\"deleteButton\" name={item.name} onClick={handleRemoveItem}>&times;</button>\n                          </div>\n                          \n                        )\n                      }\n                  )}\n                      \n                    <div className=\"inputArea\">\n                      <input value={inputValue} onChange={(event) => setInputValue(event.target.value)}   type=\"text\" placeholder=\"Add more food...\" className=\"inputTextArea\" />\n                      <button type=\"submit\" className=\"submitButton\"  onClick={() => handleAddButtonClick()}>Add</button>\n                    </div>\n\n                    </div>\n\n                </div>\n              </Modal>\n\n              \n            )}\n          />\n         \n            \n            <button className=\"goButton\" onClick={GenerateRandomNumber}>Go!</button>\n            \n\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}